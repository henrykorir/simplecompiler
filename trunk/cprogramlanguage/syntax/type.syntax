# types define

includes
	nonterm.syntax

Type -> type
{
	$0 : type_variable
	$$ = $0;
}

Type -> Type *
{
	$0 : type_variable
	#1 : type_variable
	#1.typevar = get_result_type("ptr", $0.typevar, NULL);
	$$ = #1;
}

Type -> const Type

Type -> Type const

integer_type -> enum_type

integer_type -> int
{
	#1 : type_variable
	#1.typevar = int_type;
	$$ = #1;
}

integer_type -> long

integer_type -> short

integer_type -> char

integer_type -> wchar_t

integer_type -> unsigned char

integer_type -> unsigned int

integer_type -> unsigned short

basic_type -> void *

basic_type -> double

basic_type -> float

basic_type -> integer_type
{
	$0 : type_variable
	$$ = $0;
}

basic_type -> struct struct_type

basic_type -> union_type

#no enum type because enum_type is integer_type
#basic_type -> enum_type

type -> basic_type
{
	$0 : type_variable
	$$ = $0;
}

#type -> const basic_type

#Type -> FunctionType

ReturnType -> void

ReturnType -> Type

