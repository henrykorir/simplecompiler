#terminate symbol

Terminates
	symbol : [a-zA-Z_][a-zA-Z_0-9]*
	intvalue : ([0-9]+)|(0x[0-9A-Fa-f]+)
	floatvalue : ((\d*\.\d+)|(\d+\.)|((\d+|(\d*\.\d+)|(\d+\.))[Ee][+\-]?(\d+)))f
	doublevalue : (\d*\.\d+)|(\d+\.)|((\d+|(\d*\.\d+)|(\d+\.))[Ee][+\-]?(\d+))
	charvalue : '([^\\']*(\\.)*)*'
	wcharvalue : L'([^\\']*(\\.)*)*'
	stringvalue : "([^\\"]*(\\.)*)*"
	wstringvalue : L"([^\\"]*(\\.)*)*"
	macros_keyword : #[a-z]+

Terminates
	; : ;
	( : \(
	[ : \[
	) : \)
	] : \]
	{ : \{
	} : \}
	... : \.\.\.

complex-symbols
	struct_type : symbol : complex_type_check
	enum_type : symbol : complex_type_check
	union_type : symbol : complex_type_check
#	file_name : 

Keywords : symbol
	int
	long
	short
	float
	double
	char
	unsigned
	sizeof
	void
	return
	if
	else
	for
	while
	do
	switch
	case
	default
	break
	continue
	struct
	enum
	union
	typedef
	extern
	const
	static
	auto
	register
	volatile
	goto
	wchar_t

Keywords : macros_keyword
	#define
	#include
	#if
	#else
	#endif
	#ifdef
