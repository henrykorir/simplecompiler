# struct, enum, union 

StructDefine -> StructHeader { StructContent } 

StructDefine_WithVar -> StructHeader { StructContent } ValueDefineList

EnumDefine -> EnumHeader { EnumContent } 

EnumDefine_WithVar -> EnumHeader { EnumContent } ValueDefineList 

UnionDefine -> UnionHeader { UnionContent } 

UnionDefine_WithVar -> UnionHeader { UnionContent } ValueDefineList 

StructContent -> AStructContent ;

StructContent -> AStructContent StructContent

AStructContent -> StructDefine 

AStructContent -> StructDefine_WithVar

AStructContent -> EnumDefine 

AStructContent -> EnumDefine_WithVar

AStructContent -> UnionDefine 

AStructContent -> UnionDefine_WithVar

AStructContent -> basic_type SymbolWithPtrArray

AStructContent -> const basic_type SymbolWithPtrArray

AStructContent -> integer_type symbol : intvalue

AStructContent -> Typedef 

StructHeader -> struct

StructHeader -> struct symbol

EnumDefine -> AEnumItem

EnumDefine -> AEnumItem , EnumDefine

AEnumItem -> symbol

AEnumItem -> symbol = intvalue

EnumHeader -> enum

EnumHeader -> enum EnumName

EnumName -> :

EnumName -> symbol

EnumName -> symbol : integer_type

UnionContent -> AUnionItem

UnionContent -> AUnionItem  UnionContent

AUnionItem -> basic_type SymbolWithPtrArray

AUnionItem -> const basic_type SymbolWithPtrArray

UnionHeader -> union

UnionHeader -> union symbol

