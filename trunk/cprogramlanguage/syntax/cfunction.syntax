# c function: function define

includes
	complexexp.syntax

Function -> FunctionBegin FunctionContent }

#empty function
Function -> FunctionBegin }

FunctionBegin -> FunctionHeader {

#FunctionHeader -> ReturnType symbol ( )
FunctionHeader -> Type symbol ( )

FunctionHeader -> void symbol ( )

#FunctionHeader -> ReturnType symbol ( ParamList )
FunctionHeader -> Type symbol ( ParamList )

FunctionHeader -> void symbol ( ParamList )

ParamList -> ParamList_NoMore

ParamList -> ParamList_NoMore , ...

ParamList_NoMore -> AFuncParam

ParamList_NoMore -> AFuncParam , ParamList_NoMore

AFuncParam -> Type

AFuncParam -> Type FuncParamArraySize

AFuncParam -> Type symbol

AFuncParam -> Type symbol FuncParamArraySize

FuncParamArraySize -> [ ]

FuncParamArraySize -> ArraySize2

FuncParamArraySize -> [ ] ArraySize2

AFuncParam -> void ( * ) ( ParamList )

AFuncParam -> Type ( * ) ( ParamList )

AFuncParam -> void ( * symbol ) ( ParamList )

AFuncParam -> Type ( * symbol ) ( ParamList )

FunctionContent -> ContentExpression

FunctionContent -> ContentExpression FunctionContent

ContentExpression -> AExpression

ContentExpression -> DeclearExpression ;

ContentExpression -> Typedef ;

ContentExpression -> StructDefine ;

ContentExpression -> StructDefine_WithVar ;

AExpression -> Expression ;

AExpression -> If_Expression

AExpression -> While_Expression

AExpression -> For_Expression

AExpression -> DoWhile_Expression

AExpression -> Scope_Expression

AExpression -> Return_Expression

AExpression -> Switch_Expression

AExpression -> Break_Expression

AExpression -> Continue_Expression

Return_Expression -> return ;

Return_Expression -> return Expression ;

Scope_Expression -> { FunctionContent }

Scope_Expression -> { }

DeclearExpression -> ValueDeclear

DeclearExpression -> FunctionDeclear

